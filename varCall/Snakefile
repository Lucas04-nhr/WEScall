# standard library imports
#
import os
import subprocess
import shutil
import glob
import re

# third party imports
#
from snakemake.utils import report

# project specific imports
# #################################################

LIB_PATH = os.path.abspath(
    os.path.join(os.path.dirname(os.path.realpath(workflow.snakefile)),"..", "lib"))

print(LIB_PATH)
if LIB_PATH not in sys.path:
    sys.path.insert(0, LIB_PATH)


# FIX ME 
# non-login bash
shell.executable("/bin/bash")
#shell.prefix("source rc/snakemake_env.rc;")
#include: "../rules/logging.rules"
#include: "../rules/report.rules"

CHRS = str(config['users']['chrs']).split('-')
TMP  = os.path.dirname(os.path.realpath(workflow.snakefile)) 
APP  = os.path.join(TMP, "../apps")
SCRIPT = os.path.join(TMP, "../lib")
#TOPMED = config['users']['topMed']
TOPMED = os.path.join(TMP,"../topMed")
REFPANEL = config['users']['1KG3_panel']

rule alls:
	input:
   		'out/svm/BuildModel.OK'


rule svmBuildModel_target:
	input:
		'out/aux/milk/target.milk.sites.vcf.gz'
	output:
		'out/svm/BuildModel.OK'
	threads:
		1
	run:
		shell("cat out/aux/union/*.txt > out/svm/denovo.sites.txt"),
		shell("perl {TOPMED}/scripts/step3b-run-svm-milk-filter.WES.pl 0"),
		shell("touch out/svm/BuildModel.OK")   



rule getVCF_target:
	input:
		expand('out/aux/milk/milk.{chr}.{chr}.Milk.OK', chr=CHRS)
	output:
		'out/aux/milk/target.milk.sites.vcf.gz'
	params:
		bedFile=config['users']['targetBed']
	threads:
		1
	run:
		shell("{APP}/vcf-concat  out/aux/milk/*_milk.sites.vcf.gz | gzip -c > out/aux/milk/chrAll.milk.sites.vcf.gz"),
		shell("{APP}/vcftools --gzvcf out/aux/milk/chrAll.milk.sites.vcf.gz --bed {params.bedFile} --recode --recode-INFO-all --stdout | bgzip -c > {output}")
		

rule VarDetect:
	output:
		'out/aux/milk/milk.{chr}.{chr}.Milk.OK'
	params:
		chr='{chr}',
		thread=1,
		step1_cpu=10,
		step2_cpu=100,
		step3_cpu=10,
	threads:
		1
	run:
		shell("perl {TOPMED}/scripts/step1-3a.pl WES {params.chr}  {REFPANEL} {params.step1_cpu} {params.step2_cpu} {params.step3_cpu}");
